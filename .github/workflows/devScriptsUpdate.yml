on:
  workflow_call:
    secrets:
      PERSONAL_ACCESS_TOKEN:
        description: a github PAT with repo access
        required: true

jobs:
  # what is the RC version, numerically?
  compareVersions:
    outputs:
      shouldUpdate: ${{ !endsWith(steps.packageVersion.outputs.prop, steps.version-info.outputs.version) }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: SimplySF/github-workflows/.github/actions/versionInfo@main
        id: version-info
        with:
          version: latest
          npmPackage: "@simplysf/dev-scripts"
      - run: echo "dev scripts latest is ${{ steps.version-info.outputs.version }}"
      - uses: salesforcecli/github-workflows/.github/actions/get-json-property@main
        id: packageVersion
        with:
          path: "package.json"
          prop_path: 'devDependencies["@simplysf/dev-scripts"]'

      - run: echo "this repo has version is ${{ steps.packageVersion.outputs.prop }}"
      - run: echo "output value will be ${{ !endsWith(steps.packageVersion.outputs.prop, steps.version-info.outputs.version) }}"

  updateDevScripts:
    needs: [compareVersions]
    if: ${{ needs.compareVersions.outputs.shouldUpdate == 'true' }}
    runs-on: "ubuntu-latest"
    steps:
      - run: echo "previous job output was ${{ needs.compareVersions.outputs.shouldUpdate }}"
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Get Github user info
        id: github-user-info
        uses: SimplySF/github-workflows/.github/actions/getGithubUserInfo@main
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - uses: SimplySF/github-workflows/.github/actions/gitConfig@main
        with:
          username: ${{ steps.github-user-info.outputs.username }}
          email: ${{ steps.github-user-info.outputs.email }}

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn
      - run: npm install -g yarn-deduplicate
      - run: yarn upgrade sf-chipps-dev-scripts@latest
      # this may fail because that's how dev-scripts does things
      - run: yarn install  --network-timeout 600000
        continue-on-error: true

      - run: yarn install  --network-timeout 600000
      - run: npx yarn-deduplicate
      - run: yarn install  --network-timeout 600000
        # clean up any outstanding unmerged devScripts PRs
      - run: |
          PRs=$(gh pr list --search "in:title devScripts update" --json number | jq '.[] | .number' -r | tr -d '[],"')
          for pr in $PRs; do
              gh pr close "$pr" -c "will be replaced with new PR" --delete-branch
          done
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      # this may fail but we still want a PR with partial fix
      - run: |
          git checkout -b devScripts$(date +%F)
          yarn lint -- --fix
        continue-on-error: true
      - run: |
          git add .
          git commit -m 'chore: updates from devScripts' --no-verify
          git push origin --no-verify
      # sometimes pr can't create immediately
      - uses: SimplySF/github-workflows/.github/actions/retry@main
        with:
          max_attempts: 5
          command: |
            gh pr create --title 'refactor: devScripts update' --body 'created via github action [skip-validate-pr]' -l dependencies
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
