on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        description: npm token

    inputs:
      tag:
        required: false
        description: tag used to publish to npm
        default: latest
        type: string
      nodeVersion:
        description: version of node to use.  It's better to specify latest, lts/* or lts/-1 than to hardode numbers
        type: string
        default: lts/*
        required: false
      runsOn:
        description: the runner.  Only needed if you need a non-public runner (ex, for git checkout from IP restricted private repo)
        default: ubuntu-latest
        required: false
        type: string
      githubTag:
        description: the github release tag that you want to publish as an npm package
        required: true
        type: string
jobs:
  check-publish:
    outputs:
      published: ${{ steps.is-published.outputs.published }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.githubTag }}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodeVersion }}

      - name: Is published
        id: is-published
        run: |
          RESPONSE=$(npm view .@$INPUTS_GITHUB_TAG version --json --silent || echo "Not published")

          # The response is wrapped in double quotes, so we need to compare it with (escaped) quotes
          if [ "$RESPONSE" = "\"$INPUTS_GITHUB_TAG\"" ]; then
            echo "published=true" >> "$GITHUB_OUTPUT"
          else
            echo "published=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          INPUTS_GITHUB_TAG: ${{ inputs.githubTag }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: echo "[INFO] Is package published:\ $STEPS_IS_PUBLISHED_PUBLISHED"
        env:
          STEPS_IS_PUBLISHED_PUBLISHED: ${{ steps.is-published.outputs.published }}

      - name: Fail if published
        if: steps.is-published.outputs.published == 'true'
        uses: actions/github-script@v7
        with:
          script: core.setFailed(`The version '${process.env.INPUTS_GITHUB_TAG}' has already been published to npm`)
        env:
          INPUTS_GITHUB_TAG: ${{ inputs.githubTag }}

  npm-publish:
    needs: [check-publish]
    if: ${{ always() && needs.check-publish.outputs.published == 'false' }}
    runs-on: ${{ inputs.runsOn }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.githubTag }}

      - uses: actions/setup-node@v4
        with:
          always-auth: true
          cache: yarn
          node-version: ${{ inputs.nodeVersion }}

      - uses: SimplySF/github-workflows/.github/actions/yarnInstallWithRetries@main

      - run: yarn build

      - run: yarn publish ${{ inputs.tag && format('--tag {0}', inputs.tag) || '' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
